---
- hosts: localhost
  gather_facts: no
  module_defaults:
    group/aws:
      profile: ec2-user
      region: "us-east-1"
  tasks:
    - name: Create VPC
      ec2_vpc_net:
        name: Module5
        cidr_block: 10.10.0.0/16
        tags:
          Module: 5
        state: present
      register: vpc 
    - name: debug
      debug: var=vpc
    - name: Create public subnet 1
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 public 1
          Module: 5
        cidr: 10.10.0.0/24
        state: present
      register: public_subnet_1
    - name: Create public subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 public 2
          Module: 5
        cidr: 10.10.1.0/24
        state: present
      register: public_subnet_2
    - name: Create internet gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 gateway
        state: present
      register: igw
    - name: Create public route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5
        subnets:
          - "{{ public_subnet_1.subnet.id }}"
          - "{{ public_subnet_2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        state: present
    - name: Create security group
      ec2_group:
        name: Module5-developer-sg
        description: Developer security group
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
              - 5000
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all to ports 22, 80 and 5000
        state: present
      register: secgrpt
    - name: debug
      debug: var=secgrpt
    - name: Create an ec2 launch template
      ec2_launch_template:
        name: "m5_lt"
        image_id: "ami-0715c1897453cabd1"
        key_name: auburnec2
        instance_type: t3.nano
        network_interfaces:
          - associate_public_ip_address: true
            device_index: 0
        user_data: "{{ lookup('file', 'user_data.txt') }}"
      tags:
        - m5-asg-serve
      register: tmplet
    - name: debug
      debug: var=tmplet
    - name: Create elb target group
      elb_target_group:
        name: scale-m5-tg
        protocol: tcp
        port: 80
        vpc_id: "{{ vpc.vpc.id }}"
        state: present
      register: tgtgroup 
    - name: debug
      debug: var=tgtgroup
    - name: Create auto scaling group
      ec2_asg:
        name: m5-asg
        launch_template:
            launch_template_id: '{{tmplet.default_template.launch_template_id}}'
        min_size: 2
        max_size: 4
        desired_capacity: 2
        target_group_arns: ['{{ tgtgroup.target_group_arn}}']
        vpc_zone_identifier: [ '{{ public_subnet_1.subnet.id }}', '{{ public_subnet_2.subnet.id }}' ]
        state: present










